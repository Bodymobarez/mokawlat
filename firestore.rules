
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USERS: Only admins can manage users, users can only read their own profile
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if isAdmin();
    }

    // ACTIVITY LOG: Only authenticated users can create, no one can update/delete
    match /activityLog/{logId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if false;
    }

    // Default-deny for most collections, admins have full access
    match /{collection}/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    // MATERIAL REQUESTS: All authenticated users can create, only admins can update/delete
    match /materialRequests/{requestId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
        allow update, delete: if isAdmin();
    }
    
    // CLIENTS: Admins have full access. All users can add interactions.
    match /clients/{clientId} {
        allow read: if request.auth != null;
        allow create, update, delete: if isAdmin();
        
        match /interactions/{interactionId} {
            allow read, create: if request.auth != null;
            allow update, delete: if isAdmin();
        }
        
        match /contracts/{contractId} {
            allow read: if request.auth != null;
            allow create, update, delete: if isAdmin();
        }
    }
    
    // SUPPLIERS: Admins have full access.
    match /suppliers/{supplierId} {
        allow read: if request.auth != null;
        allow create, update, delete: if isAdmin();

        match /contracts/{contractId} {
             allow read: if request.auth != null;
             allow create, update, delete: if isAdmin();
        }
    }

  }
}
