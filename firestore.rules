
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check auth status and user role.
    function isAuthenticated() {
      return request.auth != null;
    }

    function getRole() {
      // Safely access user's role document.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isAdmin() {
      return isAuthenticated() && getRole() == 'admin';
    }

    // User profiles can be read by their owner or an admin.
    // Only admins should be able to create, update, or delete user documents.
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow create, update, delete: if isAdmin();
    }

    // Most top-level collections are managed by admins, but readable by any user.
    match /employees/{employeeId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }

    match /clients/{clientId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }

    match /suppliers/{supplierId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }
    
    match /inventory/{itemId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }

    match /inventoryCategories/{categoryId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if isAdmin();
    }
    
    match /warehouses/{warehouseId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if isAdmin();
    }

    match /assets/{assetId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if isAdmin();
    }

    // Financial collections are admin-only for all operations.
    match /transactions/{transactionId} {
      allow read, create, update, delete: if isAdmin();
    }

    match /accounts/{accountId} {
      allow read, create, update, delete: if isAdmin();
    }

    // Procurement and Material Requests can be created by any authenticated user, but only managed by admins.
    match /procurement/{poId} {
      allow read, create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    match /materialRequests/{requestId} {
      allow read, create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    // Projects can be read by any user, but only managed by admins.
    match /projects/{projectId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();

      // Project sub-collections can be created by any authenticated user.
      match /tasks/{taskId} {
        allow read, create, update: if isAuthenticated();
        allow delete: if isAdmin();
      }

      match /documents/{docId} {
        allow read, create: if isAuthenticated();
        allow delete: if isAdmin();
      }
      
      match /dailyLogs/{logId} {
        allow read, create: if isAuthenticated();
        // Logs should not be updated or deleted by users.
        allow update, delete: if false; 
      }
    }
    
    // Client sub-collections can be created by any user.
    match /clients/{clientId}/interactions/{interactionId} {
        allow read, create: if isAuthenticated();
        allow update, delete: if isAdmin();
    }

    match /clients/{clientId}/contracts/{contractId} {
        allow read, create: if isAuthenticated();
        allow update, delete: if isAdmin();
    }

    // Supplier sub-collections can be created by any user.
    match /suppliers/{supplierId}/contracts/{contractId} {
        allow read, create: if isAuthenticated();
        allow update, delete: if isAdmin();
    }

    // The activity log is read-only for admins from the client.
    // It is written by backend functions with admin privileges.
    match /activityLog/{logId} {
      allow read: if isAdmin();
      allow write: if false;
    }
  }
}
