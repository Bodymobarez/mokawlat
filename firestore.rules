rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Default Rules ---
    // Default allow reads for any signed-in user, and writes only for admins.
    // This is a simpler, more permissive read model to avoid permission issues,
    // while keeping writes secure.
    match /{document=**} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // --- Specific Rule Overrides ---

    // Users can create and update their own user document.
    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      allow update(diff) : if request.auth.uid == userId && !(diff.hasAny(['role']));
      // Admins can change anything, including roles, based on the default rule.
    }
    
    // Any signed-in user can create these items.
    match /projects/{projectId}/dailyLogs/{logId} {
      allow create: if isSignedIn();
    }
    match /clients/{clientId}/interactions/{interactionId} {
      allow create: if isSignedIn();
    }
    match /materialRequests/{reqId} {
      allow create: if isSignedIn();
    }
    match /procurement/{reqId} {
      allow create: if isSignedIn();
    }

    match /projects/{projectId}/documents/{docId} {
      allow create: if isSignedIn();
    }

    // Any signed-in user can update a task's status (for the Kanban board).
    // The default admin rule covers create/delete.
    match /projects/{projectId}/tasks/{taskId} {
      allow update: if isSignedIn();
    }
  }
}
