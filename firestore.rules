rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- User Profiles ---
    // Users can create their own profile on signup
    // Users can read their own profile
    // Admins can read and write any user profile (to change roles)
    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      allow get: if request.auth.uid == userId;
      allow list, update: if isAdmin();
    }
    
    // --- Project Management (Admin-only write) ---
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // --- Employee Management (Admin-only write) ---
    match /employees/{employeeId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // --- Supplier Management (Authenticated users) ---
    match /suppliers/{supplierId} {
        allow read, write: if request.auth != null;
    }

    // --- Inventory Management (Authenticated users) ---
    match /inventory/{itemId} {
        allow read, write: if request.auth != null;
    }

    // --- Procurement Management (Authenticated users) ---
    match /procurement/{requestId} {
        allow read, write: if request.auth != null;
    }

    // --- Client & Sales Management (Authenticated users) ---
    match /clients/{clientId} {
        allow read, write: if request.auth != null;
    }
    match /clients/{clientId}/interactions/{interactionId} {
        allow read, write: if request.auth != null;
    }

    // --- Financial Management (Authenticated users) ---
    match /transactions/{transactionId} {
        allow read, write: if request.auth != null;
    }
  }
}
