rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if request.auth.uid == userId;
      allow update: if isAdmin();
    }
    
    match /activityLog/{logId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn(); 
    }

    match /projects/{projectId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    
    match /employees/{employeeId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    
    match /clients/{clientId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
      
      match /interactions/{interactionId} {
        allow read, create: if isSignedIn();
      }
      
      match /contracts/{contractId} {
        allow read: if isSignedIn();
        allow create, delete: if isAdmin();
      }
    }
    
    match /suppliers/{supplierId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
      
      match /contracts/{contractId} {
        allow read: if isSignedIn();
        allow create, delete: if isAdmin();
      }
    }
    
    match /inventory/{itemId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    
    match /procurement/{requestId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    
    match /materialRequests/{requestId} {
      allow read: if isSignedIn();
      allow create, update: if isSignedIn();
    }
    
     match /transactions/{transactionId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
  }
}
