rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is an admin by reading their user document
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read their own profile document. Admins can read any user document.
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      
      // Only admins can update user roles.
      allow update: if isAdmin();

      // Disallow client-side creation or deletion of user documents.
      allow create, delete: if false;
    }
    
    // Activity Log
    match /activityLog/{activityId} {
      // Allow any authenticated user to create activity log entries.
      allow create: if isAuthenticated();
      // Allow any authenticated user to read the activity log.
      allow read: if isAuthenticated();
      // Log entries are immutable.
      allow update, delete: if false;
    }

    // Projects collection
    match /projects/{projectId} {
      allow read: if isAuthenticated();
      // Only admins can create, update, or delete projects.
      allow write: if isAdmin();
    }
    
    // Employees collection
    match /employees/{employeeId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Suppliers collection and its subcollections
    match /suppliers/{supplierId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
      
      // Rules for contracts subcollection within a supplier
      match /contracts/{contractId} {
         allow read: if isAuthenticated();
         allow write: if isAdmin();
      }
    }
    
    // Inventory collection
    match /inventory/{itemId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Procurement collection
    match /procurement/{requestId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Clients collection and its subcollections
    match /clients/{clientId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
      
      // Rules for interactions subcollection within a client
      match /interactions/{interactionId} {
        // Any authenticated user can log an interaction.
        allow create, read: if isAuthenticated();
        // Only admins can modify or delete interactions.
        allow update, delete: if isAdmin();
      }
      
      // Rules for contracts subcollection within a client
      match /contracts/{contractId} {
         allow read: if isAuthenticated();
         allow write: if isAdmin();
      }
    }
    
    // Transactions collection
    match /transactions/{transactionId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Material Requests collection
    match /materialRequests/{requestId} {
       // Any authenticated user can create a material request.
       allow create: if isAuthenticated();
       // Any authenticated user can read requests.
       allow read: if isAuthenticated(); 
       // Only admins can approve, reject, or delete requests.
       allow update, delete: if isAdmin();
    }
  }
}
