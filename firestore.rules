
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions to check user roles safely
    function isUserDoc(userId) {
      return exists(/databases/$(database)/documents/users/$(userId));
    }
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    function isSignedIn() {
      return request.auth != null;
    }
    function isManager() {
      return isSignedIn() && isUserDoc(request.auth.uid) && (getUserRole(request.auth.uid) == 'admin' || getUserRole(request.auth.uid) == 'manager');
    }
    function isAdmin() {
      return isSignedIn() && isUserDoc(request.auth.uid) && getUserRole(request.auth.uid) == 'admin';
    }
    
    // Global Read Rule: Allow any signed-in user to read any document.
    // This simplifies permissions for an internal tool where all users can view data.
    match /{document=**} {
      allow read: if isSignedIn();
    }
    
    // --- WRITE RULES ---
    // The rules below control who can create, update, or delete data.
    
    // User Roles: only admins can write
    match /users/{userId} {
      allow write: if isAdmin();
    }
    
    // Company Profile: only admins can write
    match /company/main {
      allow write: if isAdmin();
    }
    
    // Activity Log: nobody can write directly (server-side only)
    match /activityLog/{logId} {
      allow write: if false; 
    }

    // Settings Collections (Categories, Warehouses): Admins only
    match /inventoryCategories/{categoryId} {
        allow write: if isAdmin();
    }
    match /warehouses/{warehouseId} {
        allow write: if isAdmin();
    }

    // HR Collections: managers/admins can write
    match /jobs/{jobId} { allow write: if isManager(); }
    match /candidates/{candidateId} { allow write: if isManager(); }
    match /performanceReviews/{reviewId} { allow write: if isManager(); }
    match /trainings/{trainingId} { allow write: if isManager(); }
    match /offboarding/{offboardingId} { allow write: if isManager(); }

    // Main operational collections: managers/admins can write.
    match /projects/{docId} { allow write: if isManager(); }
    match /employees/{docId} { allow write: if isManager(); }
    match /clients/{docId} { allow write: if isManager(); }
    match /suppliers/{docId} { allow write: if isManager(); }
    match /inventory/{docId} { allow write: if isManager(); }
    match /assets/{docId} { allow write: if isManager(); }
    match /procurement/{docId} { allow write: if isManager(); }
    match /materialRequests/{docId} { allow write: if isManager(); }
    match /transactions/{docId} { allow write: if isManager(); }
    match /invoices/{docId} { allow write: if isManager(); }
    match /accounts/{docId} { allow write: if isManager(); }
    
    // Sub-collections: managers/admins can write
    match /projects/{projectId}/tasks/{taskId} { allow write: if isManager(); }
    match /projects/{projectId}/documents/{docId} { allow write: if isManager(); }
    match /projects/{projectId}/dailyLogs/{logId} { allow write: if isManager(); }
    match /clients/{clientId}/interactions/{interactionId} { allow write: if isManager(); }
    match /assets/{assetId}/maintenanceLogs/{logId} { allow write: if isManager(); }
    
    // Collection Group for contracts: managers/admins can write
    match /{path=**}/contracts/{contractId} {
      allow write: if isManager();
    }
  }
}
