rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function getRole() {
      // Safely access role, default to 'user' if not present
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('role', 'user');
    }
    
    function isAdmin() {
      return isAuthenticated() && getRole() == 'admin';
    }

    // USERS
    // Users can read/write their own profile. Admins can manage all.
    match /users/{userId} {
      allow read, write: if isUser(userId) || isAdmin();
    }
    
    // ACTIVITY LOG
    // Users can create logs via server actions, but only admins can read the full feed.
    match /activityLog/{logId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if false; // Immutable
    }
    
    // COMPANY
    // Everyone can read company info, only admins can write.
    match /company/main {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
    }

    // PROJECTS
    match /projects/{projectId} {
      allow read, list: if isAuthenticated();
      allow create, update, delete: if isAdmin();

      match /tasks/{taskId} {
        allow read, list, write: if isAuthenticated();
      }
      match /documents/{docId} {
        allow read, list, write: if isAuthenticated();
      }
      match /dailyLogs/{logId} {
        allow read, list, create: if isAuthenticated();
        allow update, delete: if isAdmin();
      }
    }
    
    // HR
    match /employees/{employeeId} {
        allow read, list: if isAuthenticated();
        allow create, update, delete: if isAdmin();
    }
    
    // CRM
    match /clients/{clientId} {
      allow read, list: if isAuthenticated();
      allow create, update, delete: if isAdmin();
      
      match /interactions/{interactionId} {
        allow read, list, create: if isAuthenticated();
        allow update, delete: if isAdmin();
      }
    }
    
    // SUPPLIERS
    match /suppliers/{supplierId} {
      allow read, list: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }

    // Collection group for contracts - allows reading from both client and supplier subcollections
    match /{path=**}/contracts/{contractId} {
      allow read, list: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // INVENTORY & WAREHOUSES
    match /inventory/{itemId} {
        allow read, list: if isAuthenticated();
        allow create, update, delete: if isAdmin();
    }
    match /inventoryCategories/{categoryId} {
        allow read, list: if isAuthenticated();
        allow write: if isAdmin();
    }
    match /warehouses/{warehouseId} {
        allow read, list: if isAuthenticated();
        allow write: if isAdmin();
    }
    
    // ASSETS
    match /assets/{assetId} {
      allow read, list: if isAuthenticated();
      allow create, update, delete: if isAdmin();

      match /maintenanceLogs/{logId} {
        allow read, list, write: if isAdmin();
      }
    }
    
    // PROCUREMENT & REQUESTS
    match /procurement/{poId} {
      allow read, list: if isAuthenticated();
      allow create, update: if isAdmin();
      allow delete: if isAdmin();
    }
    match /materialRequests/{reqId} {
      allow read, list, create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }
    
    // FINANCIALS
    match /transactions/{transactionId} {
      allow read, list: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }
    match /invoices/{invoiceId} {
      allow read, list: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }
    match /accounts/{accountId} {
      allow read, list: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
}
