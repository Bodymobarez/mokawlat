rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      // Check if the user document exists and has the 'admin' role.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isSignedIn() {
      return request.auth != null;
    }

    // -- COLLECTIONS --

    // User profiles and roles
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      // Admins can update roles. Users are created via Firebase Auth functions, but we allow user to create their own record once.
      allow write: if isAdmin();
      allow create: if request.auth.uid == userId;
    }

    // Global company profile
    match /company/main {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // Core project data
    match /projects/{projectId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();

      // Project sub-collections
      match /tasks/{taskId} {
        allow read: if isSignedIn();
        // Team members of a project can manage tasks. Admins can too.
        allow write: if isAdmin() || (isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.teamMemberIds);
      }
      match /documents/{docId} {
        allow read: if isSignedIn();
        allow create, delete: if isAdmin() || (isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.teamMemberIds);
      }
      match /dailyLogs/{logId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow update, delete: if isAdmin() || (isSignedIn() && request.auth.uid == resource.data.authorId);
      }
    }

    // All other top-level collections follow a simple pattern:
    // Read: All signed-in users
    // Write: Admins only
    // This provides a secure baseline. Sub-collection rules are nested where needed.

    match /employees/{employeeId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /clients/{clientId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
      
      match /interactions/{interactionId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn(); // Any user can log an interaction
        allow update, delete: if isAdmin();
      }
      
      match /contracts/{contractId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
      }
    }

    match /suppliers/{supplierId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
      
      match /contracts/{contractId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
      }
    }
    
    match /assets/{assetId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();

      match /maintenanceLogs/{logId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
      }
    }

    match /procurement/{poId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /materialRequests/{reqId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn(); // Any user can create a request
      allow update, delete: if isAdmin(); // Only admins can approve/reject
    }

    match /invoices/{invoiceId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    match /inventory/{itemId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    match /inventoryCategories/{catId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    match /warehouses/{warehouseId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /accounts/{accountId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    match /transactions/{transactionId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // Global audit trail
    match /activityLog/{logId} {
      allow read: if isSignedIn();
      // Any authenticated user action can generate a log entry
      allow create: if isSignedIn(); 
      allow update, delete: if isAdmin();
    }
  }
}
