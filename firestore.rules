
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    // Check if the user is signed in
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Check if the user has a specific role. Use get() which returns a resource, then access data with .data
    function hasRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    // Check if the user is an admin. Safely checks for document existence first.
    function isAdmin() {
      return isSignedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && hasRole('admin');
    }
    
    // Check if the user is a manager or an admin.
    function isManager() {
      return isSignedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && (hasRole('manager') || hasRole('admin'));
    }

    // --- Global Collections ---

    // Users can read their own profile, admins can read any.
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow write: if isAdmin(); // Only admins can change roles
    }
    
    // Company profile is read-only for most, writable by admin.
    match /company/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Projects
    match /projects/{projectId} {
      allow read: if isSignedIn();
      allow create: if isManager();
      allow update: if isManager();
      allow delete: if isAdmin();

      // Tasks Sub-collection
      match /tasks/{taskId} {
        allow read: if isSignedIn();
        allow write: if isManager();
      }

      // Documents Sub-collection
      match /documents/{documentId} {
        allow read: if isSignedIn();
        allow write: if isManager();
      }

      // Daily Logs Sub-collection
      match /dailyLogs/{logId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow update, delete: if isManager();
      }
    }

    // --- Human Capital Management ---
    match /jobs/{jobId} {
        allow read: if isSignedIn();
        allow write: if isManager();
    }
    match /candidates/{candidateId} {
        allow read: if isManager();
        allow write: if isManager();
    }
    match /performanceReviews/{reviewId} {
        allow read: if isManager();
        allow write: if isManager();
    }
     match /trainings/{trainingId} {
        allow read: if isManager();
        allow write: if isManager();
    }
     match /offboarding/{offboardingId} {
        allow read: if isManager();
        allow write: if isManager();
    }

    // Clients
    match /clients/{clientId} {
      allow read: if isSignedIn();
      allow write: if isManager();

      match /interactions/{interactionId} {
        allow read: if isSignedIn();
        allow write: if isManager();
      }
      
      match /contracts/{contractId} {
        allow read: if isSignedIn();
        allow write: if isManager();
      }
    }
    
    // Suppliers
    match /suppliers/{supplierId} {
      allow read: if isSignedIn();
      allow write: if isManager();
      
      match /contracts/{contractId} {
        allow read: if isSignedIn();
        allow write: if isManager();
      }
    }

    // Inventory and related collections
    match /inventory/{itemId} {
      allow read: if isSignedIn();
      allow write: if isManager();
    }
    match /inventoryCategories/{categoryId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    match /warehouses/{warehouseId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // Assets
    match /assets/{assetId} {
      allow read: if isSignedIn();
      allow write: if isManager();
      match /maintenanceLogs/{logId} {
        allow read: if isSignedIn();
        allow write: if isManager();
      }
    }

    // Procurement & Material Requests
    match /procurement/{requestId} {
      allow read: if isSignedIn();
      allow write: if isManager();
    }
    match /materialRequests/{requestId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isManager();
      allow delete: if isManager();
    }
    
    // Financials
    match /transactions/{transactionId} {
      allow read: if isSignedIn();
      allow write: if isManager();
    }
     match /invoices/{invoiceId} {
      allow read: if isSignedIn();
      allow write: if isManager();
    }
    match /accounts/{accountId} {
      allow read: if isSignedIn();
      allow write: if isManager();
    }
    
    // System-wide collections
    match /activityLog/{logId} {
      allow read: if isManager();
      allow create: if isSignedIn(); // System services create these on behalf of users
      allow update, delete: if isAdmin();
    }

    // Collection Group rule for 'contracts'.
    // This is required to allow the collection group query on the financials page.
    match /{path=**}/contracts/{contractId} {
        allow read: if isSignedIn();
    }
  }
}
