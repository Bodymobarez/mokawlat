rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Allow users to read their own profile
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Allow admins to read all user profiles
    match /users/{userId} {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Projects: readable by any user, writable only by admins
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      match /dailyLogs/{logId} {
        allow read, create: if request.auth != null;
      }
      
      match /documents/{documentId} {
        allow read, create, delete: if request.auth != null;
      }
    }
    
    // Employees: readable by any user, writable only by admins
    match /employees/{employeeId} {
       allow read: if request.auth != null;
       allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Clients: readable by any user, writable only by admins
    match /clients/{clientId} {
       allow read: if request.auth != null;
       allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
       
       // Interactions and Contracts can be managed by any authenticated user
       match /interactions/{interactionId} {
        allow read, create: if request.auth != null;
       }
       match /contracts/{contractId} {
        allow read, create, delete: if request.auth != null;
       }
    }

    // Suppliers: readable by any user, writable only by admins
    match /suppliers/{supplierId} {
       allow read: if request.auth != null;
       allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

       match /contracts/{contractId} {
        allow read, create, delete: if request.auth != null;
       }
    }
    
    // Inventory: readable by any user, writable only by admins
    match /inventory/{itemId} {
       allow read: if request.auth != null;
       allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

     // Inventory Categories: readable by any user, writable only by admins
    match /inventoryCategories/{categoryId} {
       allow read: if request.auth != null;
       allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Procurement: readable by any user, writable only by admins
    match /procurement/{requestId} {
       allow read: if request.auth != null;
       allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Material Requests: readable by any user, writable by admins
    match /materialRequests/{requestId} {
       allow read, create: if request.auth != null;
       allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Financials: readable by any user, writable by admins
    match /transactions/{transactionId} {
       allow read: if request.auth != null;
       allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /accounts/{accountId} {
       allow read: if request.auth != null;
       allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Activity Log: readable by any user, only server/admins can write
    match /activityLog/{logId} {
       allow read: if request.auth != null;
       allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

  }
}
