
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function getRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }

    function isAdmin() {
      return isAuth() && getRole(request.auth.uid) == 'admin';
    }

    function isManager() {
      return isAuth() && getRole(request.auth.uid) in ['admin', 'manager'];
    }
    
    function isProjectMember(projectId) {
      let team = get(/databases/$(database)/documents/projects/$(projectId)).data.teamMemberIds;
      return isAuth() && (request.auth.uid in team);
    }

    // --- Global Rules ---
    // Deny all reads and writes by default.
    match /{document=**} {
      allow read, write: if false;
    }
    
    // --- Collection-Specific Rules ---

    // Users: Only admins can manage users. Users can read their own profile.
    match /users/{userId} {
      allow get: if isAuth();
      allow list: if isManager();
      allow create, update, delete: if isAdmin();
    }
    
    // Company Profile: Admins can write, all authenticated users can read.
    match /company/main {
      allow read: if isAuth();
      allow write: if isAdmin();
    }
    
    // Activity Log: Immutable log. Any authenticated user can create an entry.
    match /activityLog/{logId} {
      allow read: if isAuth();
      allow create: if isAuth();
    }

    // Projects and Sub-collections
    match /projects/{projectId} {
      allow read: if isAuth();
      allow create, update, delete: if isManager();

      // Tasks: Project members or managers can manage tasks.
      match /tasks/{taskId} {
        allow read: if isAuth();
        allow create, update, delete: if isManager() || isProjectMember(projectId);
      }
      
      // Documents: Project members or managers can add/remove documents.
      match /documents/{docId} {
        allow read: if isAuth();
        allow create, delete: if isManager() || isProjectMember(projectId);
      }

      // Daily Logs: Any authenticated user can create logs for any project.
      match /dailyLogs/{logId} {
        allow read: if isAuth();
        allow create: if isAuth();
      }
    }
    
    // Employees: Managers/Admins can manage, all authenticated users can read.
    match /employees/{employeeId} {
        allow read: if isAuth();
        allow create, update, delete: if isManager();
    }

    // Clients & Sub-collections: Managers/Admins can manage, all authenticated users can read.
    match /clients/{clientId} {
        allow read: if isAuth();
        allow create, update, delete: if isManager();

        match /interactions/{interactionId} {
            allow read: if isAuth();
            allow create: if isAuth();
        }
        match /contracts/{contractId} {
            allow read: if isAuth();
            allow create, delete: if isManager();
        }
    }
    
    // Suppliers & Sub-collections: Managers/Admins can manage, all authenticated users can read.
    match /suppliers/{supplierId} {
        allow read: if isAuth();
        allow create, update, delete: if isManager();

        match /contracts/{contractId} {
            allow read: if isAuth();
            allow create, delete: if isManager();
        }
    }

    // Settings Collections: Only admins can manage these.
    match /inventoryCategories/{catId} {
        allow read: if isAuth();
        allow create, update, delete: if isAdmin();
    }
    match /warehouses/{warehouseId} {
        allow read: if isAuth();
        allow create, update, delete: if isAdmin();
    }

    // Inventory, Assets: Managed by managers/admins
    match /inventory/{itemId} {
        allow read: if isAuth();
        allow create, update, delete: if isManager();
    }
    match /assets/{assetId} {
        allow read: if isAuth();
        allow create, update, delete: if isManager();
        match /maintenanceLogs/{logId} {
            allow read: if isAuth();
            allow create: if isManager();
        }
    }
    
    // Requests: Any authenticated user can create, only managers can update status.
    match /procurement/{poId} {
        allow read: if isAuth();
        allow create: if isAuth();
        allow update, delete: if isManager();
    }
    match /materialRequests/{reqId} {
        allow read: if isAuth();
        allow create: if isAuth();
        allow update: if isManager();
    }

    // Financials: Managed by managers/admins
    match /transactions/{transactionId} {
        allow read: if isAuth();
        allow create, update, delete: if isManager();
    }
    match /invoices/{invoiceId} {
        allow read: if isAuth();
        allow create, update, delete: if isManager();
    }
    match /accounts/{accountId} {
        allow read: if isAuth();
        allow create, update, delete: if isManager();
    }
  }
}
